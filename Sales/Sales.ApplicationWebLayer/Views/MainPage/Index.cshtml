@using Sales.ApplicationWebLayer.Components
@model List<BookViewModel>

@{
    ViewData["Title"] = "Сейлы!";
}

<!DOCTYPE html>

<html>
<head>
    <script src="~/js/signalr/dist/browser/signalr.min.js" asp-append-version="true"></script>
    <script>
    const hubConnection = new signalR.HubConnectionBuilder()
    .withUrl("/bookCounterHub")
    .build();

    hubConnection.on("UpdateRemainCopiesNumber", function(bookId, changeValue) {
        let elemValue = document.getElementById(bookId).firstChild;
        let nodeValue = elemValue.nodeValue;
        let newValue = parseInt(changeValue) + parseInt(nodeValue);
        elemValue.replaceData(0, elemValue.length, newValue);
    });
    hubConnection.start();

    function decreaseRemainingCopies(id) {
        hubConnection.invoke("UpdateRemainCopiesNumber", id, -1);
    }
    </script>
</head>
<body>
<h2>
    Список книг
</h2>
<div>
    <table class="table">
        <th>
            @Html.DisplayNameFor(model => model[0].Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].CoverPicture)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].PublicationYear)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Isbn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].CopiesNumber)
        </th>
        @foreach (var book in Model)
        {
            <tr>
                <td>@book.Id</td>
                <td>
                    <img src="data:image/png;base64, @book.CoverPicture"/>
                </td>
                <td>@book.Title</td>
                <td>@book.Author</td>
                <td>@book.PublicationYear</td>
                <td>@book.Isbn</td>
                <td>@book.Price</td>
                <td id="@book.Id">@book.CopiesNumber</td>
                @if (book.CopiesNumber > 0)
                {
                    @if (!book.HasAlreadyInCart)
                    {
                        <td>
                            <form asp-action="AddToCart">
                                <button type="submit" id="submitButton" class="btn btn-outline-secondary" onclick="decreaseRemainingCopies(@book.Id)"  asp-action="AddToCart" asp-route-bookId="@book.Id">добавить в корзину</button>
                            </form>
                        </td>
                    }
                }

            </tr>
        }
    </table>
    <span>
        @await Component.InvokeAsync(typeof(ShoppingCartViewComponent))
    </span>


</div>
</body>
</html>