@model List<Sales.ApplicationWebLayer.Models.ShoppingCartItemViewModel>

<head>
    <script src="~/js/signalr/dist/browser/signalr.min.js" asp-append-version="true"></script>
    <script>
    const hubConnection = new signalR.HubConnectionBuilder()
    .withUrl("/bookCounterHub")
    .build();

    hubConnection.on("UpdateRemainCopiesNumber", function(bookId, changeValue) {
        let elemValue = document.getElementById(bookId).firstChild;
        let nodeValue = elemValue.nodeValue;
        let newValue = parseInt(changeValue) + parseInt(nodeValue);
        elemValue.replaceData(0, elemValue.length, newValue);
        });
    hubConnection.start();

    function increaseRemainingCopies(id) {
        hubConnection.invoke("UpdateRemainCopiesNumber", id, -1);
    }

    </script>
</head>
<body>
<h2>
    Shopping Cart
</h2>
<table class="table">
    <th>
        Position
    </th>
    <th>
        Title
    </th>
    <th>
        Price
    </th>
    @foreach (var cartItem in Model)
    {
        <tr>
            <td>
                @cartItem.Id
            </td>
            <td>
                @cartItem.BookTitle
            </td>
            <td>
                @cartItem.BookPrice
            </td>
            <td>
                <form asp-action="RemoveFromCart">
                    <button asp-action="RemoveFromCart" type="submit" asp-route-bookId="@cartItem.BookId" onclick="increaseRemainingCopies(@cartItem.BookId)" class="btn btn-outline-secondary">remove</button>
                </form>
            </td>
        </tr>
    }
</table>
<div>
    Order sum: @Model.Sum(i => i.BookPrice)
    @if (@Model.Sum(i => i.BookPrice) >= 2000)
    {
        <form asp-action="MakeOrder" asp-controller="MainPage">
            <button asp-action="MakeOrder" type="submit" asp-route-bookIds="@Model.Select(i => i.BookId).ToList()" class="btn btn-outline-secondary">Make order</button>
        </form>
    }
</div>

</body>